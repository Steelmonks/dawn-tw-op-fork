{% schema %}
{
  "name": "Custom Image Sliders",
  "tag": "section",
  "blocks": [
    {
      "type": "slider_block",
      "name": "Slider Block",
      "limit": 3,
      "settings": [
        { "type": "richtext", "id": "richtext", "label": "Centered Text" },
        {
          "type": "range",
          "id": "slide_count",
          "label": "Number of Slides",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 3
        },
        { "type": "image_picker", "id": "image_1", "label": "Image 1" },
        { "type": "image_picker", "id": "image_2", "label": "Image 2" },
        { "type": "image_picker", "id": "image_3", "label": "Image 3" },
        { "type": "image_picker", "id": "image_4", "label": "Image 4" },
        { "type": "image_picker", "id": "image_5", "label": "Image 5" },
        { "type": "image_picker", "id": "image_6", "label": "Image 6" },
        { "type": "image_picker", "id": "image_7", "label": "Image 7" },
        { "type": "image_picker", "id": "image_8", "label": "Image 8" },
        { "type": "image_picker", "id": "image_9", "label": "Image 9" },
        { "type": "image_picker", "id": "image_10", "label": "Image 10" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Image Sliders",
      "blocks": [{ "type": "slider_block" }, { "type": "slider_block" }, { "type": "slider_block" }]
    }
  ]
}
{% endschema %}
<section>
<div class='twcss-w-full twcss-py-12 twcss-px-4 max-w-screen-xl twcss-mx-auto'>
  <div class='twcss-flex twcss-flex-col md:twcss-flex-row md:twcss-gap-8 twcss-items-center'>
    {% for block in section.blocks %}
      <div class='twcss-flex-1 twcss-flex twcss-flex-col twcss-items-center twcss-mb-6 twcss-w-full'>
        {% if block.settings.richtext != blank %}
          <div class='twcss-text-center twcss-mb-4 twcss-font-semibold twcss-text-lg'>
            {{ block.settings.richtext }}
          </div>
        {% endif %}
        <div class='twcss-relative twcss-w-full twcss-overflow-hidden'>
          <button
            type='button'
            class='twcss-absolute twcss-left-6 twcss-inset-y-1/2 twcss--translate-y-1/2 twcss-rounded-full twcss-z-10 twcss-p-3 twcss-text-2xl twcss-text-white twcss-flex twcss-items-center twcss-justify-center twcss-transition-all focus:twcss-outline-none focus:twcss-ring-0 active:twcss-outline-none active:twcss-ring-0 twcss-drop-shadow-lg hover:twcss-outline-none hover:twcss-ring-0 twcss-select-none twcss-touch-manipulation'
            aria-label='Previous slide'
          >
            <svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15 18L9 12L15 6" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
          <div class='custom-slider twcss-flex twcss-transition-all' style='scroll-behavior: smooth;'>
            {% for i in (1..block.settings.slide_count) %}
              {% capture image_key %}image_{{ i }}{% endcapture %}
              {% assign image = block.settings[image_key] %}
              {% if image != blank %}
                <div class='twcss-flex-shrink-0 twcss-w-full twcss-aspect-square twcss-relative'>
                  <img
                    src='{{ image | image_url: width: 800 }}'
                    alt=''
                    width='800'
                    height='800'
                    class='twcss-w-full twcss-h-full twcss-object-cover twcss-rounded-lg'
                    loading='lazy'
                  >
                </div>
              {% endif %}
            {% endfor %}
          </div>
          <button
            type='button'
            class='twcss-absolute twcss-right-6 twcss-inset-y-1/2 twcss--translate-y-1/2 twcss-rounded-full twcss-z-10 twcss-p-3 twcss-text-2xl twcss-text-white twcss-flex twcss-items-center twcss-justify-center twcss-transition-all focus:twcss-outline-none focus:twcss-ring-0 active:twcss-outline-none active:twcss-ring-0 twcss-drop-shadow-lg hover:twcss-outline-none hover:twcss-ring-0 twcss-select-none twcss-touch-manipulation'
            aria-label='Next slide'
          >
            <svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M9 18L15 12L9 6" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
      </div>
    {% endfor %}
  </div>
</div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // For each slider block
    document.querySelectorAll('.custom-slider').forEach(function (slider) {
      const slides = slider.querySelectorAll('.twcss-flex-shrink-0');
      const prevButton = slider.parentElement.querySelector('button[aria-label="Previous slide"]');
      const nextButton = slider.parentElement.querySelector('button[aria-label="Next slide"]');
      if (!slides.length || !prevButton || !nextButton) return;
      // Hide all slides except the first one
      slides.forEach((slide, index) => {
        slide.style.display = index === 0 ? 'flex' : 'none';
      });
      let currentSlideIndex = 0;
      function showSlide(index) {
        slides.forEach((slide) => {
          slide.style.display = 'none';
        });
        slides[index].style.display = 'flex';
      }
      function nextSlide() {
        currentSlideIndex = (currentSlideIndex + 1) % slides.length;
        showSlide(currentSlideIndex);
      }
      function prevSlide() {
        currentSlideIndex = (currentSlideIndex - 1 + slides.length) % slides.length;
        showSlide(currentSlideIndex);
      }
      nextButton.addEventListener('click', nextSlide);
      prevButton.addEventListener('click', prevSlide);
    });
  });
</script>

<style>
  /* Additional global button reset */
  button {
    -webkit-tap-highlight-color: transparent !important;
    -webkit-user-select: none !important;
    user-select: none !important;
    outline: none !important;
    box-shadow: none !important;
  }
</style>
