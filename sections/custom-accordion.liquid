{% comment %} Custom Accordion Section with 6 accordions, 2 visible at a time, hardcoded logic, no blocks, Tailwind CSS with twcss- prefix used, padding applied via inline style for dynamic values, now using <details> and <summary> for dropdown behavior {% endcomment %}

<div class="custom-accordion-section twcss-w-full twcss-flex twcss-flex-col twcss-items-center twcss-justify-center twcss-m-auto" style="padding-top: {{ section.settings.padding_top }}px; padding-bottom: {{ section.settings.padding_bottom }}px;">
  <div class="custom-accordion-title twcss-mb-6">
    <h2 class="twcss-text-brandblue twcss-text-2xl twcss-font-bold twcss-text-center">{{ section.settings.title }}</h2>
  </div>
  <div class="custom-accordion-wrapper twcss-flex twcss-items-center twcss-w-full">
    <button class="custom-accordion-arrow left twcss-text-2xl twcss-px-2 twcss-py-1" aria-label="Previous">&#x25C0;</button>
    <div class="custom-accordion-items twcss-flex twcss-flex-col twcss-gap-4 twcss-flex-1">
      {% for i in (1..6) %}
        {% assign heading_key = "accordion_" | append: i | append: "_heading" %}
        {% assign content_key = "accordion_" | append: i | append: "_content" %}
        <details class="custom-accordion-item twcss-border twcss-rounded-lg twcss-p-4 twcss-bg-white twcss-shadow-sm" data-index="{{ i }}">
          <summary class="custom-accordion-heading twcss-font-semibold twcss-text-lg twcss-flex twcss-items-center twcss-justify-between">
            {{ section.settings[heading_key] }}
            <!-- Optionally add plus/minus icons here -->
        
          </summary>
          <div class="custom-accordion-content twcss-text-gray-700 twcss-mt-2">
            {{ section.settings[content_key] }}
          </div>
        </details>
      {% endfor %}
    </div>
    <button class="custom-accordion-arrow right twcss-text-2xl twcss-px-2 twcss-py-1" aria-label="Next">&#x25B6;</button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const items = Array.from(document.querySelectorAll('.custom-accordion-item'));
    const leftBtn = document.querySelector('.custom-accordion-arrow.left');
    const rightBtn = document.querySelector('.custom-accordion-arrow.right');
    let start = 0;
    const visibleCount = 2;

    function updateVisible() {
      items.forEach((item, idx) => {
        if (idx >= start && idx < start + visibleCount) {
          item.classList.remove('twcss-hidden');
        } else {
          item.classList.add('twcss-hidden');
        }
      });
      leftBtn.disabled = start === 0;
      rightBtn.disabled = start + visibleCount >= items.length;
    }

    leftBtn.addEventListener('click', () => {
      if (start > 0) {
        start -= visibleCount;
        updateVisible();
      }
    });
    rightBtn.addEventListener('click', () => {
      if (start + visibleCount < items.length) {
        start += visibleCount;
        updateVisible();
      }
    });
    updateVisible();
  });
</script>

{% schema %}
{
  "name": "Custom Accordion",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Frequently Asked Questions"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Top padding (px)",
      "min": 0,
      "max": 100,
      "step": 4,
      "default": 32
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Bottom padding (px)",
      "min": 0,
      "max": 100,
      "step": 4,
      "default": 32
    },
    {
      "type": "header",
      "content": "Accordion 1"
    },
    {
      "type": "text",
      "id": "accordion_1_heading",
      "label": "Accordion 1 Heading",
      "default": "Accordion 1 Heading"
    },
    {
      "type": "textarea",
      "id": "accordion_1_content",
      "label": "Accordion 1 Content",
      "default": "Accordion 1 content goes here."
    },
    {
      "type": "header",
      "content": "Accordion 2"
    },
    {
      "type": "text",
      "id": "accordion_2_heading",
      "label": "Accordion 2 Heading",
      "default": "Accordion 2 Heading"
    },
    {
      "type": "textarea",
      "id": "accordion_2_content",
      "label": "Accordion 2 Content",
      "default": "Accordion 2 content goes here."
    },
    {
      "type": "header",
      "content": "Accordion 3"
    },
    {
      "type": "text",
      "id": "accordion_3_heading",
      "label": "Accordion 3 Heading",
      "default": "Accordion 3 Heading"
    },
    {
      "type": "textarea",
      "id": "accordion_3_content",
      "label": "Accordion 3 Content",
      "default": "Accordion 3 content goes here."
    },
    {
      "type": "header",
      "content": "Accordion 4"
    },
    {
      "type": "text",
      "id": "accordion_4_heading",
      "label": "Accordion 4 Heading",
      "default": "Accordion 4 Heading"
    },
    {
      "type": "textarea",
      "id": "accordion_4_content",
      "label": "Accordion 4 Content",
      "default": "Accordion 4 content goes here."
    },
    {
      "type": "header",
      "content": "Accordion 5"
    },
    {
      "type": "text",
      "id": "accordion_5_heading",
      "label": "Accordion 5 Heading",
      "default": "Accordion 5 Heading"
    },
    {
      "type": "textarea",
      "id": "accordion_5_content",
      "label": "Accordion 5 Content",
      "default": "Accordion 5 content goes here."
    },
    {
      "type": "header",
      "content": "Accordion 6"
    },
    {
      "type": "text",
      "id": "accordion_6_heading",
      "label": "Accordion 6 Heading",
      "default": "Accordion 6 Heading"
    },
    {
      "type": "textarea",
      "id": "accordion_6_content",
      "label": "Accordion 6 Content",
      "default": "Accordion 6 content goes here."
    }
  ],
  "presets": [
    {
      "name": "Custom Accordion"
    }
  ]
}
{% endschema %}
