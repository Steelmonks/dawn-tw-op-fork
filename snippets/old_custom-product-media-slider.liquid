<article class='product__media'>
  <button
    class='btn product__media__image-nav__button product__media__image-nav__button--previous'
    style='display: none;'
  >
    &larr;
  </button>
  <figure class='product__media__main-image product__media__main-image--desktop'>
    <img
      id='productMainImage'
      src='{{ product.featured_image | image_url: width: 750 }}'
      alt='{{ product.title }}'
      loading='lazy'
      width='750'
      height='{{ product.featured_image.height | times: 750.0 | divided_by: product.featured_image.width | round }}'
      data-main-image
    >
  </figure>

  <figure class='product__media__main-image product__media__main-image--mobile'>
    <div class='mobile-carousel'>
      <div class='mobile-carousel__container'>
        {%- assign featured_image_id = product.featured_image.id -%}
        <!-- First slide: always the featured image -->
        <div class='mobile-carousel__slide active'>
          <img
            src='{{ product.featured_image | image_url: width: 750 }}'
            alt='{{ product.featured_image.alt | escape }}'
            loading='lazy'
            width='750'
            height='{{ product.featured_image.height | times: 750.0 | divided_by: product.featured_image.width | round }}'
          >
        </div>
        <!-- Then all other images except the featured image -->
        {% for media in product.media %}
          {% unless media.alt contains 'Kundenfoto' or media.id == featured_image_id %}
            <div class='mobile-carousel__slide'>
              <img
                src='{{ media | image_url: width: 750 }}'
                alt='{{ media.alt | escape }}'
                loading='lazy'
                width='750'
                height='{{ media.height | times: 750.0 | divided_by: media.width | round }}'
              >
            </div>
          {% endunless %}
        {% endfor %}
      </div>
    </div>
    <button class='mobile-carousel__button mobile-carousel__button--prev' aria-label='Previous slide'>&larr;</button>
    <button class='mobile-carousel__button mobile-carousel__button--next' aria-label='Next slide'>&rarr;</button>
  </figure>

  <nav class='product__media__image-nav'>
    {% for media in product.media %}
      {% unless media.alt contains 'Kundenfoto' %}
        <div class='product-media__item {% if media == product.featured_image %}active{% endif %}'>
          {{ media | image_url: width: 125 | image_tag }}
        </div>
      {% endunless %}
    {% endfor %}
  </nav>

  <button class='btn product__media__image-nav__button product__media__image-nav__button--next'>&rarr;</button>

  <script>
    // Add scrollTopMax and scrollLeftMax to the Element prototype if not already present
    (function (elmProto) {
      if (!('scrollTopMax' in elmProto)) {
        Object.defineProperties(elmProto, {
          scrollTopMax: {
            get() {
              return this.scrollHeight - this.clientHeight;
            },
          },
          scrollLeftMax: {
            get() {
              return this.scrollWidth - this.clientWidth;
            },
          },
        });
      }
    })(Element.prototype);

    // Cache DOM elements and initialize state
    const imageNav = document.querySelector('.product__media__image-nav');
    const imageNavItems = [...imageNav.querySelectorAll('.product-media__item')];
    const mainImage = document.getElementById('productMainImage');
    const previousButton = document.querySelector('.product__media__image-nav__button--previous');
    const nextButton = document.querySelector('.product__media__image-nav__button--next');
    const mainImageFigure = document.querySelector('.product__media__main-image > img');

    // Utility functions
    const updateMainImage = (sourceElement) => {
      mainImage.src = sourceElement.querySelector('img').src.replace('&width=125', '&width=750');
    };

    const updateActiveItem = (newActiveItem) => {
      imageNav.querySelector('.product-media__item.active')?.classList.remove('active');
      newActiveItem.classList.add('active');
      updateMainImage(newActiveItem);
    };

    const scrollToItem = (item) => {
      imageNav.style.scrollBehavior = 'smooth';
      const isVertical = window.innerWidth >= 1440; // Match your media query

      if (isVertical) {
        const itemOffset = item.offsetTop - imageNav.clientHeight / 2 + item.clientHeight / 2;
        imageNav.scrollTop = itemOffset;
      } else {
        const itemOffset = item.offsetLeft - imageNav.clientWidth / 2 + item.clientWidth / 2;
        imageNav.scrollLeft = itemOffset;
      }

      imageNav.style.scrollBehavior = 'auto';
    };

    // Event Handlers
    const handleItemClick = (item) => {
      if (!item.classList.contains('active')) {
        updateActiveItem(item);
        scrollToItem(item);
      }
    };

    const handleNavButton = (direction) => {
      const activeItem = imageNav.querySelector('.product-media__item.active');
      const newItem =
        direction === 'next'
          ? activeItem.nextElementSibling || imageNavItems[0]
          : activeItem.previousElementSibling || imageNavItems[imageNavItems.length - 1];

      updateActiveItem(newItem);
      scrollToItem(newItem);
    };

    // Drag scroll functionality
    let isDragging = false;
    let startX, scrollLeft;

    const updateButtonVisibility = () => {
      const isVertical = window.innerWidth >= 1440;

      if (isVertical) {
        const currentScroll = imageNav.scrollTop;
        previousButton.style.display = currentScroll === 0 ? 'none' : 'flex';
        nextButton.style.display = currentScroll >= imageNav.scrollTopMax ? 'none' : 'flex';
      } else {
        const currentScroll = imageNav.scrollLeft;
        previousButton.style.display = currentScroll === 0 ? 'none' : 'flex';
        nextButton.style.display = currentScroll >= imageNav.scrollLeftMax ? 'none' : 'flex';
      }
    };

    // Event Listeners
    imageNavItems.forEach((item) => {
      item.addEventListener('click', () => handleItemClick(item));
    });

    previousButton.addEventListener('click', () => handleNavButton('prev'));
    nextButton.addEventListener('click', () => handleNavButton('next'));

    // Drag scroll events
    imageNav.addEventListener('mousedown', (e) => {
      isDragging = true;
      imageNav.classList.add('grabbing');
      const isVertical = window.innerWidth >= 1440;

      if (isVertical) {
        startX = e.pageY - imageNav.offsetTop;
        scrollLeft = imageNav.scrollTop;
      } else {
        startX = e.pageX - imageNav.offsetLeft;
        scrollLeft = imageNav.scrollLeft;
      }
    });

    document.addEventListener('mouseup', () => {
      isDragging = false;
      imageNav.classList.remove('grabbing');
    });

    document.addEventListener('mousemove', (e) => {
      if (!isDragging) return;
      e.preventDefault();

      const isVertical = window.innerWidth >= 1440;
      if (isVertical) {
        const y = e.pageY - imageNav.offsetTop;
        const walk = (y - startX) * 1.5;
        imageNav.scrollTop = scrollLeft - walk;
      } else {
        const x = e.pageX - imageNav.offsetLeft;
        const walk = (x - startX) * 1.5;
        imageNav.scrollLeft = scrollLeft - walk;
      }
    });

    imageNav.addEventListener('scroll', updateButtonVisibility);

    // Initial setup
    if (imageNav.scrollLeftMax < imageNav.clientWidth) {
      nextButton.style.display = 'flex';
    }

    // Update the maximum height/width of the image nav based on layout
    const updateImageNavDimensions = () => {
      const isVertical = window.innerWidth >= 1440;
      const mainImageHeight = mainImageFigure.offsetHeight;
      const mainImageWidth = mainImageFigure.offsetWidth;

      if (isVertical) {
        imageNav.style.maxHeight = `${mainImageHeight}px`;
        imageNav.style.maxWidth = ''; // Reset width when vertical
      } else {
        imageNav.style.maxHeight = ''; // Reset height when horizontal
        imageNav.style.maxWidth = `${mainImageWidth}px`;
      }
    };

    // Update ResizeObserver to use new function name
    const resizeObserver = new ResizeObserver(updateImageNavDimensions);
    resizeObserver.observe(mainImageFigure);

    // Update image load listener to use new function name
    mainImage.addEventListener('load', updateImageNavDimensions);

    // Add resize listener to update button visibility
    window.addEventListener('resize', updateButtonVisibility);

    // Update button visibility on page load
    updateButtonVisibility();

    // Mobile carousel functionality
    const initMobileCarousel = () => {
      const carousel = document.querySelector('.mobile-carousel__container');
      if (!carousel) return;

      const slides = [...carousel.querySelectorAll('.mobile-carousel__slide')];
      const prevButton = document.querySelector('.mobile-carousel__button--prev');
      const nextButton = document.querySelector('.mobile-carousel__button--next');

      const updateActiveSlide = (index) => {
        slides.forEach((slide) => slide.classList.remove('active'));
        slides[index]?.classList.add('active');
      };

      const scrollToSlide = (index) => {
        const slide = slides[index];
        if (!slide) return;

        slide.scrollIntoView({
          behavior: 'smooth',
          block: 'nearest',
          inline: 'center',
        });
        updateActiveSlide(index);
      };

      const updateButtonVisibility = () => {
        const scrollLeft = carousel.scrollLeft;
        const maxScroll = carousel.scrollWidth - carousel.clientWidth;

        prevButton.style.display = scrollLeft <= 0 ? 'none' : 'flex';
        nextButton.style.display = scrollLeft >= maxScroll ? 'none' : 'flex';

        // Update active class based on current scroll position
        const currentIndex = getCurrentSlideIndex();
        updateActiveSlide(currentIndex);
      };

      // Find current slide index based on scroll position
      const getCurrentSlideIndex = () => {
        const scrollLeft = carousel.scrollLeft;
        const slideWidth = slides[0]?.offsetWidth || 0;
        if (slideWidth === 0) return 0;
        return Math.round(scrollLeft / slideWidth);
      };

      // Reset carousel to first slide
      const resetCarousel = () => {
        if (slides.length === 0) return;
        
        // Temporarily disable smooth scrolling
        const originalBehavior = carousel.style.scrollBehavior;
        carousel.style.scrollBehavior = 'auto';
        
        // Force scroll to beginning
        carousel.scrollLeft = 0;
        
        // Set first slide as active
        slides.forEach((slide) => slide.classList.remove('active'));
        slides[0].classList.add('active');
        
        // Restore scroll behavior after a short delay
        setTimeout(() => {
          carousel.style.scrollBehavior = originalBehavior;
        }, 100);
        
        updateButtonVisibility();
      };

      prevButton.addEventListener('click', () => {
        const currentIndex = getCurrentSlideIndex();
        scrollToSlide(currentIndex - 1);
      });

      nextButton.addEventListener('click', () => {
        const currentIndex = getCurrentSlideIndex();
        scrollToSlide(currentIndex + 1);
      });

      // Update active slide on scroll
      carousel.addEventListener('scroll', () => {
        // Use requestAnimationFrame to limit updates
        requestAnimationFrame(updateButtonVisibility);
      });

      // Initial setup and reset on multiple events to handle browser behavior
      resetCarousel();
      
      // Reset again after a short delay to handle browser scroll restoration
      setTimeout(resetCarousel, 100);
      setTimeout(resetCarousel, 300);
      
      // Also reset on window load and when page becomes visible
      window.addEventListener('load', resetCarousel);
      document.addEventListener('visibilitychange', () => {
        if (!document.hidden) {
          setTimeout(resetCarousel, 50);
        }
      });
    };

    // Initialize on DOMContentLoaded and also immediately if DOM is already ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initMobileCarousel);
    } else {
      initMobileCarousel();
    }
    
    // Also initialize on window load as a fallback
    window.addEventListener('load', initMobileCarousel);
  </script>
</article>

<style>
  .product__info {
    display: flex;
    flex-direction: column;
  }

  .product__container {
    display: flex;
    gap: 12px;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-top: 4rem;
    margin: 0 auto;
  }
  @media screen and (min-width: 768px) {
    .product__container {
      max-width: 85%;
    }
    .product__media {
      width: 50%;
    }
  }
  @media screen and (min-width: 2000px) {
    .product__container {
      max-width: 2000px;
    }
  }

  .product__wrapper {
    display: flex;
    gap: 12px;
    justify-content: center;
    width: 100%;
  }
  .product__price {
    display: flex;
    gap: 1rem;
    position: relative;
    align-items: center;
    margin-top: 12px;
    white-space: nowrap;
  }

  .product__info__price-details {
    position: relative;
    z-index: 1;
  }
  .product__info__price-details-wrapper {
    position: relative;
    display: flex;

    cursor: pointer;
  }
  .product__info__price-details__summary {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  .product__info__price-details__icon {
    display: inline-flex;
    align-items: center;
    color: #999;
  }
  .product__info__price-details-wrapper[open] + .product__info__price-details-content-wrapper {
    display: block;
    transform: scaleX(0);
    opacity: 0;
    transform-origin: left;
    animation: scaleFromLeft 0.3s ease-in-out forwards;
  }
  @keyframes scaleFromLeft {
    from {
      opacity: 0;
      transform: scaleX(0);
    }
    to {
      opacity: 1;
      transform: scaleX(1);
    }
  }
  .product__info__price-details-content-wrapper {
    position: absolute;
    left: 50%;
    top: 0;
    width: 1px;
    height: 1px;
    display: none;
  }
  .product__info__price-details__content {
    position: absolute;
    bottom: 5px;
    left: 50%;
    transform: translateX(-50%);

    /* Create triangle pointer down side using clip-path */
    clip-path: polygon(
      0 0,
      100% 0,
      100% calc(100% - 10px),
      55% calc(100% - 10px),
      50% 100%,
      45% calc(100% - 10px),
      0 calc(100% - 10px)
    );

    width: 300px;
    max-width: 300px;
    white-space: normal;
    word-wrap: break-word;
    font-size: 12px;

    padding: 1rem 1rem 1.75rem 1rem;
    color: #fafaff;
    background: #090a0cb9;
    border-radius: 4px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
  @media screen and (max-width: 768px) {
    .product__info__price-details__content {
      width: 250px;
      max-width: 250px;
    }
  }

  .product__info__price-details__content a {
    color: rgb(213, 227, 255);
  }

  .product__info,
  .product__media {
    position: relative;
    flex: 1;
  }
  .product__title {
    padding-right: 120px;
    position: relative;
  }
  /* Trust Badge */
  .product__title::after {
    position: absolute;
    z-index: -1;
    right: 5px;
    top: 0;
    width: 110px;
    height: 110px;
    background: url('https://ucarecdn.com/14d25053-428f-4286-94f2-8cf774fae5b2/-/format/auto/-/preview/240x240/-/quality/lightest/100%25-GARANTIE-LOGO.png');
    content: '';
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
  }
  @media screen and (max-width: 768px) {
    .product__title {
      padding-right: 90px;
    }
    .product__title::after {
      width: 80px;
      height: 80px;
    }
  }

  .product__media {
    display: flex;
    flex-direction: column;
    gap: 12px;
    height: 100%;
  }
  .product__media__main-image {
    aspect-ratio: 1 / 1;
    object-fit: cover;
  }
  .product__media__main-image--desktop {
    display: block;
  }
  .product__media__main-image--mobile {
    display: none;
  }
  @media screen and (max-width: 768px) {
    .product__media__main-image--desktop {
      display: none;
    }
    .product__media__main-image--mobile {
      display: block;
    }
  }
  .product__media__main-image img {
    aspect-ratio: 1 / 1;
    object-fit: cover;

    height: auto;
    max-height: 100%;

    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
    border-radius: 10px;
  }

  .product__media__image-nav {
    position: relative;
    display: flex;
    gap: 8px;
    height: 127px;
    overflow-x: scroll;
    overflow-y: hidden;
    scrollbar-width: none;
    user-select: none;
    cursor: grab;
  }
  .product__media__image-nav::-webkit-scrollbar {
    display: none;
  }
  @media screen and (max-width: 768px) {
    .product__media__image-nav {
      display: none;
    }
  }

  .product__media__image-nav.grabbing {
    cursor: grabbing;
  }

  .product__media__image-nav__button {
    vertical-align: middle;
    font-size: 16px;
    font-weight: 100;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fafaff;
    background: rgba(0, 68, 204, 1);
    border: 2px solid #090a0c;
    border-radius: 7px;

    position: absolute;
    bottom: 40px;

    width: 44px;
    height: 44px;
    padding: 12px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
    cursor: pointer;
    z-index: 1;
  }
  .product__media__image-nav__button--previous {
    left: 12px;
  }
  .product__media__image-nav__button--next {
    right: 12px;
  }
  @media screen and (min-width: 1440px) {
    .product__media {
      width: auto;
    }
    .product__media__image-nav__button--previous {
      transform: rotate(90deg);
      bottom: auto;
      left: auto;
      top: 12px;
      right: 40px;
    }
    .product__media__image-nav__button--next {
      transform: rotate(90deg);
      top: auto;
      left: auto;
      bottom: 12px;
      /* bottom: 22%; */
      right: 40px;
    }

    .browser-safari .product__media__image-nav__button--next {
      bottom: 22%;
    }
  }
  @media screen and (max-width: 768px) {
    .product__media__image-nav__button--previous,
    .product__media__image-nav__button--next {
      bottom: 50%;
      transform: translateY(-50%);
    }

    .product__media__image-nav__button--previous {
      left: -10px;
    }

    .product__media__image-nav__button--next {
      right: -10px;
    }
  }

  .product-media__item {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    height: 125px;
    width: 125px;
    box-sizing: content-box;
    user-select: none;
    border: 1px solid transparent;
    transition: border-radius 0.25s ease-in-out;
  }
  .product-media__item.active,
  .product-media__item.active img {
    border-color: #090a0c;
    border-radius: 10px;
  }

  .product-media__item img {
    height: 125px;
    width: 125px;
    object-fit: cover;
    pointer-events: none;
    user-select: none;
    transition: border-radius 0.25s ease-in-out;
  }

  @media screen and (max-width: 768px) {
    .product__wrapper {
      flex-direction: column;
    }
    .product__wrapper .product__info {
      padding: 0 15px;
    }
    .product__media {
      align-items: center;
    }
    .product__media__main-image {
      aspect-ratio: unset;
    }
    .product__media__main-image.mobile-only {
    }
  }
  span.price-item.price-item--regular {
    font-size: 16px;
    font-weight: normal;
  }

  .product__info > *:first-child + * {
    margin-top: 0;
  }

  /* Product benefits */
  .product__benefits {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1.6rem;
  }

  .product__benefit {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.8rem;
    flex: 1 1 45%;
  }

  .product__benefit-icon > svg {
    width: 2.4rem;
    height: auto;
  }

  .shopify-payment-button__button {
    border-radius: var(--button-border-radius);
    overflow: hidden;
    border: var(--border-width) solid currentColor;
    color: currentColor;
    background: transparent;
  }

  .shopify-payment-button__button--unbranded:hover:not([disabled]) {
    background: unset;
  }

  .shopify-payment-button__button--hidden {
    display: none;
  }

  .product__payment-icons > * + * {
    margin-top: 1.6rem;
  }

  /* Variants picker */
  variant-radios,
  variant-selects {
    display: block;
  }

  variant-selects {
    cursor: pointer;
  }

  .product-form__input {
    border: none;
  }

  .product-form__input input[type='radio']:focus-visible + label {
    outline-style: dashed;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--color-base-text);
  }

  variant-selects .form__label,
  variant-radios .form__label {
    font-size: var(--font-size-body-small);
    display: inline-block;
  }

  variant-selects .form__label:not(:first-child),
  variant-radios fieldset:not(:first-of-type) {
    margin-top: 3.2rem;
  }

  .product-form__input input[type='radio'] {
    clip: rect(0, 0, 0, 0);
    overflow: hidden;
    position: absolute;
    height: 1px;
    width: 1px;
  }

  .product-form__input input[type='radio'] + label {
    background: transparent;
    cursor: pointer;
    text-align: center;
    padding: 0.8rem 1.6rem;
    display: inline-block;
    border: var(--border-width) solid currentColor;
    border-radius: var(--variant-pills-radius);
    color: currentColor;
    margin-right: 0.8rem;
    margin-top: 0.8rem;
  }

  .product-form__input input[type='radio']:checked + label {
    background: #090a0c;
    color: #fafaff;
    border: none;
  }

  /* ATC Buttons */
  .product-form__submit__container {
    display: flex;
    align-items: center;
    gap: 1.6rem;
    flex-direction: column;
  }

  .product-form__error-message-wrapper {
    margin-bottom: 1.6rem;
    color: var(--color-error);
  }

  /* Product media */
  .no-js .product-media {
    overflow-x: scroll;
    width: 100%;
    display: inline-flex;
  }

  .no-js .product-media > * {
    flex: 0 0 100%;
  }

  product-media {
    display: block;
  }

  .product-media__wrapper {
    position: relative;
  }

  .product__xr-button {
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
    margin: 0 auto;
    z-index: 20;
  }

  .product-single__media {
    width: 100%;
  }

  .flickity-viewport {
    transition: height 0.4s ease;
  }

  .thumbnails {
    position: absolute;
    z-index: 99;
    padding: 0 var(--page-gutter);
    overflow-x: auto;
    width: 100%;
    left: 0;
    right: 0;
  }

  .thumbnails .product-thumbnails__item {
    margin-right: 1.6rem;
  }

  .thumbnails--bottom-middle {
    bottom: 4.8rem;
  }

  .thumbnails--bottom-middle .product-media__thumbnails {
    margin: 0 auto;
    max-width: 400px;
  }

  .product-thumbnails__item button {
    width: 3.6rem;
    height: 3.6rem;
    overflow: hidden;
    border-radius: 5rem;
    position: relative;
  }
  .product-thumbnails__item img {
    height: auto;
  }

  .product-thumbnails__item a {
    display: block;
    width: 100%;
    height: 100%;
  }

  .product-thumbnails__item-badge {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .product-thumbnails__item-badge svg {
    width: 3.2rem;
    height: 3.2rem;
  }

  .product-thumbnails__item.is-selected button {
    border: solid var(--border-width) rgb(var(--color-primary));
  }

  .product-thumbnails__item:not(.is-selected) img {
    opacity: 0.5;
  }

  /* Product model UI */
  product-model {
    display: block;
  }

  product-model button {
    width: 100%;
    border: 0;
  }

  product-model button img {
    object-fit: cover;
  }

  product-model button img,
  product-model .shopify-model-viewer-ui,
  product-model .shopify-model-viewer-ui model-viewer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    max-width: 100%;
  }

  .xr-button[data-shopify-xr-hidden] {
    visibility: hidden;
  }

  .shopify-design-mode .xr-button[data-shopify-xr-hidden] {
    display: none;
  }

  @media screen and (max-width: 60em) {
    .active .xr-button:not([data-shopify-xr-hidden]) {
      display: block;
    }
  }

  @media screen and (min-width: 60em) {
    .xr-button[data-shopify-xr-hidden] {
      display: none;
    }
  }

  .shopify-model-viewer-ui__button[hidden] {
    display: none;
  }

  /* Hide thumbnails when the current cell is a model */
  .product-media[data-current-media-type='model'] + .thumbnails {
    opacity: 0;
    visibility: hidden;
    transition: opacity ease 1s, visibility ease 1s;
  }

  /* Sticky Bar */
  product-sticky-bar {
    background: var(--color-base-background);
    color: var(--color-base-text);
    position: fixed;
    bottom: 0;
    right: 0;
    left: 0;
    z-index: 99;
    min-height: 6.4rem;
    padding-top: 2rem;
    padding-bottom: 2rem;
    display: flex;
    align-items: center;
    transform: translateY(100%);
    transition: transform 0.5s ease-in-out;
    will-change: transform;
  }

  .product__sticky-bar--in-view {
    transform: translateY(0);
  }

  .product-sticky-bar__wrapper {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 1.6rem;
    align-items: center;
    width: 100%;
  }

  .product-sticky-bar__product-info > * + * {
    margin-top: 0.8rem;
  }

  @media screen and (max-width: 60em) {
    .product-form__submit__container .quantity {
      width: 100%;
      max-width: unset;
    }

    .product-form__quantity {
      width: 100%;
    }
  }

  @media screen and (min-width: 60em) {
    .product-form__submit__container {
      flex-direction: row;
    }

    .product-sticky-bar__product-form {
      text-align: right;
    }
  }

  /* Featured product section */
  .featured-product--has-padding .featured-product__wrapper {
    padding: var(--page-gutter);
  }

  @media screen and (max-width: 60em) {
    .featured-product--has-padding .product__info {
      padding-left: 0;
      padding-right: 0;
      padding-bottom: 0;
    }
  }

  @media screen and (min-width: 60em) {
    .featured-product--has-padding .product__info {
      padding-top: 0;
      padding-right: 0;
      padding-bottom: 0;
    }
  }

  /* Recipient form */

  .js .recipient-checkbox ~ .recipient-fields {
    display: none;
  }

  .js .recipient-checkbox:checked ~ .recipient-fields {
    display: block;
  }

  .recipient-checkbox {
    display: inline-block;
  }

  .recipient-checkbox:not(:checked) {
    margin-bottom: 3.2rem;
  }

  .product-form__recipient-error-message-wrapper {
    margin-bottom: 3.2rem;
  }

  .recipient-fields__field {
    margin-bottom: 1.6rem;
  }

  .no-js .recipient-checkbox,
  .no-js .recipient-checkbox + label {
    display: none;
  }

  .recipient-fields {
    margin-top: 3.2rem;
    margin-bottom: 3.2rem;
  }
  .product-sticky-bar__wrapper {
    grid-template-columns: 1fr;
    text-align: center;
    justify-items: center;
    gap: 3px;
  }
  product-sticky-bar {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }

  /* Trustshops overwrites */
  .product__wrapper #etrusted-trusted_stars_service {
    margin-top: -12px;
    margin-bottom: -24px;
  }
  #etrusted-product_review_list {
    position: relative;
    margin: 24px 0;
    background: #fafaff90;
    background-image: url('https://cdn.shopify.com/s/files/1/0472/6420/2901/files/web-jakob_with_stars.png?v=1734011225');
    background-blend-mode: lighten;
    background-position: left bottom 20px;
    background-repeat: no-repeat;
    background-size: 500px;
  }
  @media screen and (max-width: 768px) {
    #etrusted-product_review_list {
      background-image: unset;
    }

    #etrusted-product_review_list::before {
      content: '';
      display: block;
      aspect-ratio: 3000 / 1996;
      width: 100%;
      height: auto;
      background: #fafaff90;
      background-image: url('https://cdn.shopify.com/s/files/1/0472/6420/2901/files/web-jakob_with_stars.png?v=1734011225&width=500');
      background-blend-mode: overlay;
      background-position: left bottom;
      background-repeat: no-repeat;
      background-size: contain;
      margin-bottom: -50px;
    }
  }

  /* Large screen product layout */
  @media screen and (min-width: 1440px) {
    .product__media {
      flex-direction: row;
      justify-content: flex-end;
    }

    .product__media__image-nav {
      flex-direction: column;
      min-width: 127px;
      height: 100%;
      overflow-x: hidden;
      overflow-y: scroll;
    }
  }

  @media screen and (min-width: 2000px) {
    .product__media {
      max-width: 33dvw;
    }
  }

  /* Mobile carousel styles */
  .mobile-carousel {
    position: relative;
    width: 100%;
  }

  .mobile-carousel__container {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
    scroll-behavior: smooth; /* Add smooth scrolling by default */
  }

  .mobile-carousel__container::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Opera */
  }

  .mobile-carousel__slide {
    flex: 0 0 90%; /* Take up 90% of container width */
    scroll-snap-align: center;
    scroll-snap-stop: always;
    opacity: 0.5;
    transform: scale(0.9);
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1); /* Smoother easing function and longer duration */
  }
  .mobile-carousel__slide:first-of-type {
    margin-left: 15px;
  }
  .mobile-carousel__slide:last-of-type {
    margin-right: 15px;
  }

  .mobile-carousel__slide img {
    width: 100%;
    height: auto;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1); /* Match transition timing */
  }

  /* Active slide styles */
  .mobile-carousel__slide.active {
    opacity: 1;
    transform: scale(1);
  }

  .mobile-carousel__button {
    vertical-align: middle;
    font-size: 16px;
    font-weight: 100;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fafaff;
    background: rgba(0, 68, 204, 1);
    border: 2px solid #090a0c;
    border-radius: 7px;

    position: absolute;
    top: 50%;
    transform: translateY(-50%);

    opacity: 0.75;

    width: 44px;
    height: 44px;
    padding: 12px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
    cursor: pointer;
    z-index: 1;
  }

  .mobile-carousel__button:hover {
    background: rgba(0, 68, 204, 1);
  }

  .mobile-carousel__button--prev {
    left: 10px;
  }

  .mobile-carousel__button--next {
    right: 10px;
  }

  @media screen and (min-width: 769px) {
    .mobile-carousel,
    .mobile-carousel__button {
      display: none;
    }
  }

  /* Add smooth scrolling to the container on non-touch devices */
  @media (hover: hover) {
    .mobile-carousel__container {
      scroll-behavior: smooth;
    }
  }
</style>
